
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ayzqxlszyvhqzwswpewr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF5enF4bHN6eXZocXp3c3dwZXdyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4NzYzNzgsImV4cCI6MjA1OTQ1MjM3OH0.Qi1KIaQVRiA_L6ZLaOblJYHU3qP41vxCVBuIuGOkkpA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Add debugging for important API calls
const originalRpc = supabase.rpc.bind(supabase);
supabase.rpc = function(fnName: string, params?: any, options?: any) {
  const result = originalRpc(fnName, params, options);
  
  // Log important function calls
  if (fnName === 'register_or_update_patient') {
    result.then(response => {
      console.log(`Register patient response:`, response);
    });
  }
  
  return result;
};

// Add debugging for lab results operations
const originalFrom = supabase.from.bind(supabase);
supabase.from = function(table: string) {
  const builder = originalFrom(table);
  
  if (table === 'lab_results') {
    const originalSelect = builder.select.bind(builder);
    builder.select = function(...args: any[]) {
      const query = originalSelect(...args);
      query.then((result: any) => {
        console.log(`Lab results select query:`, result);
      });
      return query;
    };
    
    const originalInsert = builder.insert.bind(builder);
    builder.insert = function(...args: any[]) {
      console.log(`Lab results insert args:`, args);
      const query = originalInsert(...args);
      query.then((result: any) => {
        console.log(`Lab results insert query result:`, result);
      });
      return query;
    };
    
    const originalUpdate = builder.update.bind(builder);
    builder.update = function(...args: any[]) {
      console.log(`Lab results update args:`, args);
      const query = originalUpdate(...args);
      query.then((result: any) => {
        console.log(`Lab results update query result:`, result);
      });
      return query;
    };
  }
  
  return builder;
};
